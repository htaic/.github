name: Build-DB-Docker-image

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        description: "Name of docker registry to publish. Does not need ghcr.io/htaic/ in front."
        type: string
      working_dir:
        required: false
        description: "Operating path for path dependent steps"
        type: string
        default: .
      semversion:
        required: false
        description: "version tag to use"
        type: string
        default: v1.0.0
      tags:
        required: false
        description: "all tags to use"
        type: string
        default: ""
      trigger_release:
        required: false
        description: "Toggle to true for docker push all tags"
        type: boolean
        default: false
    secrets:
      GH_READPAT:
        required: true
      GH_USERNAME:
        required: true
      GH_MANAGEPACKAGETOKEN:
        required: false

jobs:
  build-db-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/htaic/${{ inputs.image_name }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=sha
            type=raw,latest
            type=semver,pattern={{version}},value=${{ inputs.semversion }}

      - name: Gather Postgres Files
        working-directory: ${{ inputs.working_dir }}
        run: |
          echo $PWD
          mkdir ./sql
          for i in $(find . -name "*.sql") ; 
            do cp "$i" ./sql ; 
          done

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push - input tag
        uses: docker/build-push-action@v3
        if: ${{ inputs.tags != '' }}
        with:
          tags: ${{ inputs.tags }}
          context: ${{ inputs.working_dir }}
          push: ${{ inputs.trigger_release }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push - generate tag
        uses: docker/build-push-action@v3
        if: ${{ inputs.tags == '' }}
        with:
          tags: ${{ steps.meta.outputs.tags }}
          context: ${{ inputs.working_dir }}
          push: ${{ inputs.trigger_release }}
          labels: ${{ steps.meta.outputs.labels }}
